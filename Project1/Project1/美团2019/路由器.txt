#include <iostream>
#include <vector>
#include <string>
#include <map>
using namespace std;
int main()
{
	int n, k;
	cin >> n >> k;
	int i = 0;
	vector<int> vc;
	int a;
	while (i < n)
	{
		i++;
		cin >> a;
		vc.push_back(a);
	}
	vector<vector<int>> vv(n, {0,0});
	
	for (int j = 0;j < vc.size();j++)
	{
		int left = j - vc[j] < 0 ? 0 : j - vc[j];
		int right = j + vc[j]+1 >= vc.size() ? vc.size() : j + vc[j]+1;
		vv[j][0] = left;
		vv[j][1] = right;
	}
	vector<int> dp(n+1, 0);
	for (int k = 0;k < vc.size();k++)
	{
		dp[vv[k][0]] += 1;
		dp[vv[k][1]] -= 1;
	}
	int sum = 0, ans = 0;
	for (int m = 0;m < vc.size();m++)
	{
		sum += dp[m];
		if (sum >= k)
			ans++;
	}
	cout << ans << endl;
	while (1);
	return 0;
}